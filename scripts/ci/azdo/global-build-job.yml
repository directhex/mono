parameters:
  nameSuffix: ''
  buildArgs: ''
  archType: ''
  osGroup: ''
  osSubgroup: ''
  container: ''
  variables: []
  platformTag: ''
  extraCITags: ''
  timeoutInMinutes: ''
  dependsOn: []
  pool: ''
  platform: ''
  condition: true
  useContinueOnErrorDuringBuild: false
  shouldContinueOnError: false
  dependOnEvaluatePaths: false
  isOfficialBuild: false
  enablePublishTestResults: false
  testResultsFormat: ''
  extraStepsTemplate: ''
  extraStepsParameters: {}
  enableRichCodeNavigation: false
  richCodeNavigationLanguage: 'csharp'
  richCodeNavigationEnvironment: 'production'

jobs:
- template: /eng/common/templates/job/job.yml
  parameters:
    name: ${{ format('build_{0}{1}_{2}_{3}', parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.nameSuffix) }}
    displayName: ${{ format('Build {0}{1} {2} {3}', parameters.osGroup, parameters.osSubgroup, parameters.archType, parameters.nameSuffix) }}
    pool: ${{ parameters.pool }}
    container: ${{ parameters.container }}
    condition: and(succeeded(), ${{ parameters.condition }})
    timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
    enablePublishTestResults: ${{ parameters.enablePublishTestResults }}
    testResultsFormat: ${{ parameters.testResultsFormat }}

    workspace:
      clean: all
    enableRichCodeNavigation: ${{ parameters.enableRichCodeNavigation }}
    richCodeNavigationLanguage: ${{ parameters.richCodeNavigationLanguage }}
    richCodeNavigationEnvironment: ${{ parameters.richCodeNavigationEnvironment }}

    ${{ if and(ne(parameters.dependOnEvaluatePaths, true),ne(parameters.dependsOn,'')) }}:
      dependsOn: ${{ parameters.dependsOn }}

    ${{ if eq(parameters.dependOnEvaluatePaths, true) }}:
      dependsOn: 
      - evaluate_paths
      - ${{ if ne(parameters.dependsOn,'') }}:
        - ${{ parameters.dependsOn }}

    variables:
      - ${{ each variable in parameters.variables }}:
        - ${{ variable }}

    steps:
    - checkout: self
      clean: true
      fetchDepth: $(checkoutFetchDepth)

    - ${{ if in(parameters.osGroup, 'OSX', 'iOS', 'tvOS', 'Android') }}:
      - script: $(Build.SourcesDirectory)/eng/install-native-dependencies.sh ${{ parameters.osGroup }} ${{ parameters.archType }} azDO
        displayName: Install Build Dependencies

      - script: |
          du -sh $(Build.SourcesDirectory)/*
          df -h
        displayName: Disk Usage before Build

    # Build
    - script: CI_TAGS="${{ parameters.platformTag }} ${{ parameters.extraCITags}}" $(Build.SourcesDirectory)/scripts/ci/run-jenkins.sh
      displayName: Build product
      ${{ if eq(parameters.useContinueOnErrorDuringBuild, true) }}:
        continueOnError: ${{ parameters.shouldContinueOnError }}

    - ${{ if in(parameters.osGroup, 'OSX', 'iOS', 'tvOS', 'Android') }}:
      - script: |
          du -sh $(Build.SourcesDirectory)/*
          df -h
        displayName: Disk Usage after Build
        condition: always()

      # If intended to send extra steps after regular build add them here.
    - ${{ if ne(parameters.extraStepsTemplate, '') }}:
      - template: ${{ parameters.extraStepsTemplate }}
        parameters:
          osGroup: ${{ parameters.osGroup }}
          osSubgroup: ${{ parameters.osSubgroup }}
          archType: ${{ parameters.archType }}
          platformTag: ${{ parameters.platformTag }}
          extraCITags: ${{ parameters.extraCITags }}
          nameSuffix: ${{ parameters.nameSuffix }}
          platform: ${{ parameters.platform }}
          shouldContinueOnError: ${{ parameters.shouldContinueOnError }}
          ${{ insert }}: ${{ parameters.extraStepsParameters }}

    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/'
        PublishLocation: Container
        ArtifactName: Logs_Build_${{ parameters.osGroup }}_${{ parameters.osSubGroup }}_${{ parameters.archType }}_${{ parameters.nameSuffix }}
      continueOnError: true
      condition: always()
