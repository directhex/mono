jobs:
- job: Build
  strategy:
    matrix:
      Windows x64:
        poolname: Hosted VS2017
        manifest: win-x64
        sed: sed
  pool:
    name: $(poolname)
  steps:
  - bash: |  
      brew install autoconf automake libtool gnu-sed
    displayName: 'Prepare OSX dependencies'
    condition: eq(variables['poolname'], 'Hosted macOS')

  - bash: |  
      sudo apt update
      sudo apt -y install nuget build-essential libtool libtool-bin cmake gettext dotnet-sdk-2.2
    displayName: 'Prepare Linux dependencies'
    condition: eq(variables['poolname'], 'Hosted Ubuntu 1604')

  - script: |  
      choco install msys2 --params="/InstallDir:%CD:~0,2%\msys64 /NoUpdate /NoPath"
      set PATH=%CD:~0,2%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
      %CD:~0,2%\msys64\usr\bin\pacman --noconfirm -Syyuu
      %CD:~0,2%\msys64\usr\bin\pacman --noconfirm -Syuu
      set PATH=C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
      %CD:~0,2%\msys64\usr\bin\bash -lc "pacman --noconfirm -Suy"
      %CD:~0,2%\msys64\usr\bin\bash -lc "pacman --noconfirm -S --needed gettext autoconf automake libtool mingw-w64-x86_64-cmake mingw-w64-x86_64-gcc"
    env:
      CHERE_INVOKING: yes
    displayName: 'Prepare Windows dependencies'
    condition: eq(variables['poolname'], 'Hosted VS2017')
  
  - ${{ if and(ne(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest')) }}:
    - bash: |
        ${sed} -i "s#git://github.com/#https://dn-bot:${dncengPat}@dev.azure.com/dnceng/internal/_git/#; s#\.git\$##; s#\(url = .*\)/\(.*\)#\1-\2#" .gitmodules
      env:
        dncengPat: $(dn-bot-dotnet-build-rw-code-rw)
        sed: $(sed)
      displayName: 'Rewrite .gitmodules'

  - script: |
      set PATH=%CD:~0,2%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
      %CD:~0,2%\msys64\usr\bin\bash -lc "./autogen.sh --host=x86_64-w64-mingw32 --with-core=only"
    displayName: 'Build (MSBuild)'
    env:
      CHERE_INVOKING: yes
    condition: eq(variables['poolname'], 'Hosted VS2017')

  - bash: |
      ./autogen.sh --with-core=only
      make
      make -C netcore nupkg
    displayName: 'Build (Make)'
    condition: ne(variables['poolname'], 'Hosted VS2017')